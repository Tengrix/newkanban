{"version":3,"sources":["Task.tsx","Board.tsx","NewTask.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Task","props","useState","tasks","title","editTask","setEditTask","priority","upPr","setUpPr","CardDeck","Card","CardBody","CardTitle","tag","CardSubtitle","className","Button","color","onClick","CardText","goal","role","type","disabled","status","statusDown","id","statusUp","show","value","onChange","event","target","saveNewTask","deleteTask","Board","filter","el","sort","a","b","map","NewTask","task","setTask","newPriority","setNewPriority","newGoal","setNewGoal","placeholder","addTask","initialTasks","uuidv4","App","setTasks","allStatuses","next","indexOf","newTasks","newTask","newTitle","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.deba86bf.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport {ITodo} from './Todo'\nimport './App.css';\n\nimport {\n    Card, Button, CardImg, CardTitle, CardText, CardDeck,\n    CardSubtitle, CardBody\n} from 'reactstrap';\n\ninterface IProps {\n    tasks: ITodo\n\n    editTask(id: string): void;\n\n    statusUp(id: string): void;\n\n    deleteTask(id: string): void;\n\n    statusDown(id: string): void;\n\n    saveNewTask(value: string, id: string): void;\n\n}\n\n\nexport default function Task(props: IProps) {\n    const [editTask, setEditTask] = useState(props.tasks.title)\n    const [upPr, setUpPr] = useState(+props.tasks.priority)\n    return (\n\n        <CardDeck>\n            <Card>\n                <CardBody>\n                    <CardTitle tag=\"h5\">{props.tasks.title}</CardTitle>\n                    <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">Priority: {upPr} <Button color=\"info\" onClick={()=>{setUpPr(upPr+1)}}>up</Button>\n                        <Button color=\"success\" onClick={()=>{setUpPr(upPr-1)}}>down</Button></CardSubtitle>\n                    <CardText>Goal: {props.tasks.goal} </CardText>\n                    <div className=\"btn-group\" role=\"group\" aria-label=\"Button group with nested dropdown\">\n                    <button type=\"button\" className=\"btn btn-primary\" disabled={props.tasks.status === 'Todo'} onClick={() => {\n                        props.statusDown(props.tasks.id)\n                    }}>⇐\n                    </button>\n                    <button type=\"button\" className=\"btn btn-primary\" disabled={props.tasks.status === 'Done'} onClick={() => {\n                        props.statusUp(props.tasks.id)\n                    }}>⇒\n                    </button>\n                    </div>\n                    {props.tasks.show &&\n                    <input type=\"text\" value={editTask} onChange={event => setEditTask(event.target.value)}/>}\n                    {!props.tasks.show ? <Button onClick={() => {\n                            props.editTask(props.tasks.id)\n                        }}>edit</Button> :\n                        <>\n                            <button onClick={() => {\n                                props.saveNewTask(editTask, props.tasks.id)\n                            }}>save\n                            </button>\n                            <button onClick={() => {\n                                props.editTask(props.tasks.id)\n                            }}>cancel\n                            </button>\n                        </>}\n                    <Button color=\"danger\" onClick={() => {\n                        props.deleteTask(props.tasks.id)\n                    }}>delete\n                    </Button>\n                </CardBody>\n            </Card>\n        </CardDeck>\n    );\n};\n\n\n\n\n\n\n\n\n\n\n\n// <div className=\"App\">\n//             {props.tasks.title}\n//             {props.tasks.priority}\n\n//         </div>\n//     );\n// }\n\n","import React from 'react';\nimport Task from './Task'\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport {ITodo} from './Todo'\n\ninterface IProps {\n    status: string;\n\n    statusDown(id: string): void;\n\n    statusUp(idx: string): void;\n\n    deleteTask(id: string): void;\n\n    editTask(id: string): void;\n\n    saveNewTask(newTitle: string, id: string): void;\n\n    tasks: ITodo[];\n\n\n}\n\n\nexport default function Board(props: IProps) {\n\n    return (\n        <div className=\"col-sm\">\n            <div className={'statuses'}>\n                <h3>{props.status}</h3>\n            </div>\n            <ul>\n                {\n                    props.tasks.filter(el => props.status === el.status).sort((a,b)=>+a.priority- +b.priority).map(el => <li key={el.id}><Task tasks={el}\n                                                                                                         statusUp={props.statusUp}\n                                                                                                         statusDown={props.statusDown}\n                                                                                                         deleteTask={props.deleteTask}\n                                                                                                         editTask={props.editTask}\n                                                                                                         saveNewTask={props.saveNewTask}/>\n                    </li>)\n                }\n            </ul>\n        </div>\n    );\n}\n\n","import React, {useState} from 'react';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './App.css';\n\n\ninterface IProps {\n    addTask(value: string, value1: string, value2: string): void\n}\n\nexport default function NewTask(props: IProps) {\n\n    const [task, setTask] = useState('')\n    const [newPriority, setNewPriority] = useState('')\n    const [newGoal, setNewGoal] = useState('')\n    const clear = () => {\n        props.addTask(task, newPriority, newGoal)\n        setTask('')\n        setNewPriority('')\n        setNewGoal('')\n    }\n    return (\n        <div className=\"App\">\n            <input type=\"text\" placeholder={'task'} value={task} onChange={event => setTask(event.target.value)}/>\n            <div>\n                <input type=\"text\" placeholder={'goal'} value={newGoal}\n                       onChange={event => setNewGoal(event.target.value)}/>\n            </div>\n            <div>\n                <input className={'priority'} type=\"text\" placeholder={'priority'} value={newPriority}\n                       onChange={event => setNewPriority(event.target.value)}/>\n                <button onClick={() => {\n                    clear()\n                }}>add new task\n                </button>\n\n            </div>\n\n        </div>\n    );\n}\n\n","import React, {useState} from 'react';\nimport './App.css';\nimport Board from \"./Board\";\nimport NewTask from \"./NewTask\";\nimport 'bootstrap/dist/css/bootstrap.css'\nimport {v4 as uuidv4} from 'uuid';\nimport {ITodo} from './Todo'\n\nconst initialTasks = [\n    {\n        title: 'Learn React',\n        status: 'Todo',\n        id: uuidv4(),\n        show: false,\n        priority: '5',\n        goal: 'create an App'\n    },\n    {\n        title: 'Learn JS',\n        status: 'In progress',\n        id: uuidv4(),\n        show: false,\n        priority: '3',\n        goal: 'finish JS practice'\n    },\n    {\n        title: 'Learn CSS',\n        status: 'Review',\n        id: uuidv4(),\n        show: false,\n        priority: '1',\n        goal: 'practice more bootstrap'\n    },\n    {\n        title: 'Learn Python',\n        status: 'Done',\n        id: uuidv4(),\n        show: false,\n        priority: '2',\n        goal: 'start machine learning'\n    }\n];\n\n\nfunction App() {\n    const [tasks, setTasks] = useState<ITodo[]>(initialTasks)\n    const allStatuses = ['Todo', 'In progress', 'Review', 'Done']\n\n    const prevStatus = (status: string) =>\n        allStatuses[allStatuses.indexOf(status) - 1]\n\n    const nextStatus = (status: string) =>\n        allStatuses[allStatuses.indexOf(status) + 1]\n\n    const statusUp = (id: string) => {\n        const next = tasks.map(el => el.id === id ? {...el, status: nextStatus(el.status)} : el)\n        setTasks(next)\n    }\n    const statusDown = (id: string) => {\n        const next = tasks.map(el => el.id === id ? {...el, status: prevStatus(el.status)} : el)\n        setTasks(next)\n    }\n    const addTask = (newTitle: string, newPriority:string, newGoal: string) => {\n        const newTask = [...tasks, {\n            title: newTitle,\n            status: 'Todo',\n            id: uuidv4(),\n            show: false,\n            priority: newPriority,\n            goal:newGoal\n        }]\n        setTasks(newTask)\n    }\n\n    const deleteTask = (id: string) => {\n        const newTasks = tasks.filter(el => el.id !== id)\n        setTasks(newTasks)\n    }\n\n    const editTask = (id: string) => {\n        const newTask = tasks.map(el => {\n            if (el.id === id) el.show = !el.show\n            return el\n        })\n        setTasks(newTask)\n    }\n\n    const saveNewTask = (newTitle: string, id: string) => {\n        const newTask = tasks.map(el => el.id === id ? {...el, title: newTitle} : el)\n        setTasks(newTask)\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                {allStatuses.map(el => <Board\n                    tasks={tasks}\n                    statusUp={statusUp}\n                    statusDown={statusDown}\n                    deleteTask={deleteTask}\n                    editTask={editTask}\n                    saveNewTask={saveNewTask}\n                    status={el}/>)}\n            </div>\n            <NewTask addTask={addTask} />\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}